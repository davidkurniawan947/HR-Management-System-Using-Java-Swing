/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import control.DepartmentsDao;
import control.EmployeeDao;
import control.JobsDao;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Departments;
import model.Employees;
import model.Jobs;

/**
 *
 * @author MSI
 */
public class PanelEmployee extends javax.swing.JPanel implements ListSelectionListener{
    DepartmentsDao daoDepart;
    JobsDao daoJobs;
    EmployeeDao daoEmp;
    private Employees employee;
    DefaultTableModel dataEmployee;
    Jobs job;
    Departments depart;
    List<Jobs> dataJob;
    List<Departments> dataDep;
    
    public PanelEmployee() {
        initComponents();
        daoDepart = new DepartmentsDao();
        daoJobs = new JobsDao();
        daoEmp = new EmployeeDao();
        dataEmployee = (DefaultTableModel)tabelEmp.getModel();
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        dept = new javax.swing.JComboBox<>();
        comm = new javax.swing.JSpinner();
        salary = new javax.swing.JFormattedTextField();
        jobCB = new javax.swing.JComboBox<>();
        num = new javax.swing.JTextField();
        mail = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ket = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelEmp = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kelola Data Employee", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel2.setText("ID");

        jLabel3.setText("Full Name");

        jLabel4.setText("Email");

        jLabel5.setText("Phone Number");

        jLabel6.setText("Hire Date");

        jLabel7.setText("Job Title");

        jLabel8.setText("Salary");

        jLabel9.setText("Commision Pct");

        jLabel10.setText("Department Name");

        jLabel11.setText("Keterangan");

        dept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptActionPerformed(evt);
            }
        });
        dept.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                deptPropertyChange(evt);
            }
        });

        comm.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.0f), Float.valueOf(0.0f), Float.valueOf(0.4f), Float.valueOf(0.01f)));

        jobCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jobCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobCBActionPerformed(evt);
            }
        });
        jobCB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jobCBPropertyChange(evt);
            }
        });

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        id.setEditable(false);

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ket.setEditable(false);
        ket.setColumns(20);
        ket.setRows(5);
        jScrollPane2.setViewportView(ket);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(id, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(mail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(num, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jobCB, 0, 226, Short.MAX_VALUE)
                                            .addComponent(comm)
                                            .addComponent(dept, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(salary))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jobCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(salary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 166;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 0, 0);
        add(jPanel1, gridBagConstraints);

        tabelEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Full Name", "Email", "Phone Number", "Hire Date", "Sallary", "Commission Pct", "Job Title", "Department Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelEmp);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 481;
        gridBagConstraints.ipady = 604;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 0, 0);
        add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Kelola Master Data Employee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 21, 0, 0);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void jobCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobCBActionPerformed
        try {
            job = dataJob.get(jobCB.getSelectedIndex());
        } catch (Exception exception) {}
    }//GEN-LAST:event_jobCBActionPerformed

    private void jobCBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jobCBPropertyChange
        try {
            job = dataJob.get(jobCB.getSelectedIndex());
        } catch (Exception exception) {}
    }//GEN-LAST:event_jobCBPropertyChange

    private void deptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptActionPerformed
        try {
            depart = daoDepart.getData(((Departments)dataDep.get(dept.getSelectedIndex())).getDepartmentId().intValue());
            String data = "";
            data = data + "Street Address : " + depart.getLocationId().getStreetAddress();
            data = data + "\nPostal Code: " + depart.getLocationId().getPostalCode();
            data = data + "\nState Province: " + depart.getLocationId().getStateProvince();
            data = data + "\nCountries: " + depart.getLocationId().getCountryId().getCountryName();
            data = data + "\nRegion: " + depart.getLocationId().getCountryId().getRegionId().getRegionName();
            ket.setText(data);
        } catch (Exception e) {
            depart = new Departments();
            ket.setText("");
            e.printStackTrace();
        }
    }//GEN-LAST:event_deptActionPerformed

    private void deptPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_deptPropertyChange
        try {
            depart = daoDepart.getData(((Departments)dataDep.get(dept.getSelectedIndex())).getDepartmentId().intValue());
            String data = "";
            data = data + "Street Address : " + depart.getLocationId().getStreetAddress();
            data = data + "\nPostal Code: " + depart.getLocationId().getPostalCode();
            data = data + "\nState Province: " + depart.getLocationId().getStateProvince();
            data = data + "\nCountries: " + depart.getLocationId().getCountryId().getCountryName();
            data = data + "\nRegion: " + depart.getLocationId().getCountryId().getRegionId().getRegionName();
            ket.setText(data);
        } catch (Exception e) {
            depart = new Departments();
            ket.setText("");
            e.printStackTrace();
        }
    }//GEN-LAST:event_deptPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println(this.job.toString());
        if ((name.getText().trim().split(" ")).length != 2) {
            JOptionPane.showMessageDialog(this, "Full Name is required!\nMust 2 String value with separator space!", "Warning Message", 2);
        } else if (mail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Email is required!", "Warning Message", 2);
        } else if (Double.parseDouble(salary.getValue().toString().trim()) == 0.0D) {
            JOptionPane.showMessageDialog(this, "Salary is required!", "Warning Message", 2);
        } else {
        save();
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        delete();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        reset();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner comm;
    private javax.swing.JComboBox<String> dept;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jobCB;
    private javax.swing.JTextArea ket;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField name;
    private javax.swing.JTextField num;
    private javax.swing.JFormattedTextField salary;
    private javax.swing.JTable tabelEmp;
    // End of variables declaration//GEN-END:variables
    private void save() {
        if (employee.getEmployeeId() == null) {
            String[] tmp = name.getText().trim().split(" ");
            employee.setFirstName(tmp[0]);
            employee.setLastName(tmp[1]);
            employee.setEmail(mail.getText().trim());
            employee.setPhoneNumber(num.getText().trim());
            employee.setJobId(job);
            employee.setSalary(Double.parseDouble(salary.getValue().toString().trim()));
            employee.setCommissionPct(Double.valueOf(Double.parseDouble(comm.getValue().toString())));
            employee.setDepartmentId(depart);
            if (this.daoEmp.insertData(employee)) {
                JOptionPane.showMessageDialog(this, "Data Employee berhasil ditambah!", "Information Message", 1);
                reset();
            } else {
                JOptionPane.showMessageDialog(this, "Data Employee gagal ditambah!", "Warning Message", 2);
            } 
        } else {
            String[] tmp = name.getText().trim().split(" ");
            employee.setFirstName(tmp[0]);
            employee.setLastName(tmp[1]);
            employee.setEmail(mail.getText().trim());
            employee.setPhoneNumber(num.getText().trim());

            employee.setJobId(this.job);
            employee.setSalary(Double.parseDouble(salary.getValue().toString().trim()));
            employee.setCommissionPct(Double.valueOf(Double.parseDouble(comm.getValue().toString())));
            employee.setDepartmentId(depart);
            if (this.daoEmp.updateData(employee)) {
                JOptionPane.showMessageDialog(this, "Data Employee berhasil diubah!", "Information Message", 1);
                reset();
            } else {
                JOptionPane.showMessageDialog(this, "Data Employee gagal diubah!", "Warning Message", 2);
            } 
        } 
    }
  
    private void delete() {
        if (employee.getEmployeeId() == null) {
            JOptionPane.showMessageDialog(this, "Data Employee tidak ada!", "Warning Message", 2);
        } else if (JOptionPane.showConfirmDialog(this, "Apakah Anda akan menghapus Data Employee?", "Confirmation Delete", 2, 3) == 0) {
            if (this.daoEmp.deleteData(employee)) {
                JOptionPane.showMessageDialog(this, "Data Employee berhasil dihapus!", "Information Message", 1);
                reset();
            } else {
                JOptionPane.showMessageDialog(this, "Data Employee gagal dihapus!", "Warning Message", 2);
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Data Employee batal dihapus!", "Information Message", 1);
        } 
    }
  
    public void reset() {
        employee = new Employees();
        id.setText("");
        name.setText("");
        ket.setText(null);
        mail.setText("");
        num.setText("");
     
        ListJobCB();
        jobCB.setSelectedIndex(0);
        salary.setValue(Double.valueOf(0.0D));
        comm.setValue(Double.valueOf(0.0D));
        ListDepartmentCB();
        listEmployees();
    }
  
    private void listEmployees() {
        tabelEmp.getSelectionModel().removeListSelectionListener(this);
        dataEmployee.getDataVector().removeAllElements();
        for (Employees e : this.daoEmp.getAllData()) {
            dataEmployee.addRow(new Object[] { 
            e.getEmployeeId(), 
            e.getFirstName() + " " + e.getLastName(), 
            e.getEmail(), 
            (e.getPhoneNumber() == null) ? "-" : e.getPhoneNumber(), 
            formatDate.sdf.format(e.getHireDate()), 
            Double.valueOf(e.getSalary()), 
            Double.valueOf((e.getCommissionPct() == null) ? 0.0D : (e.getSalary() * e.getCommissionPct().doubleValue())), 
            e.getJobId().getJobTitle(), 
            e.getDepartmentId().getDepartmentName() });
        } 
        tabelEmp.getSelectionModel().addListSelectionListener(this);
    }
    
    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == tabelEmp.getSelectionModel())
            try {
                employee = this.daoEmp.getData(Integer.parseInt(tabelEmp.getValueAt(tabelEmp.getSelectedRow(), 0).toString()));
                id.setText(employee.getEmployeeId().toString());
                name.setText(employee.getFirstName() + " " + employee.getLastName());
                mail.setText(employee.getEmail());
                num.setText(employee.getPhoneNumber());
              
                jobCB.setSelectedItem(employee.getJobId().getJobTitle());
                salary.setValue(Double.valueOf(employee.getSalary()));
                comm.setValue(Double.valueOf((employee.getCommissionPct() == null) ? 0.0D : employee.getCommissionPct().doubleValue()));
                dept.setSelectedItem(employee.getDepartmentId().getDepartmentName());
            } catch (Exception ex) {
                ex.printStackTrace();
            }  
    }
            
    public void ListJobCB() {
        dataJob = daoJobs.getAllData();
        String[] data = new String[dataJob.size()];
        for (int i = 0; i < data.length; i++)
            data[i] = ((Jobs)dataJob.get(i)).getJobTitle(); 
            jobCB.setModel(new DefaultComboBoxModel<>(data));
    }
  
    public void ListDepartmentCB() {
        dataDep = daoDepart.getAllData();
        String[] data = new String[dataDep.size()];
        for (int i = 0; i < data.length; i++)
            data[i] = ((Departments)dataDep.get(i)).getDepartmentName(); 
            dept.setModel(new DefaultComboBoxModel<>(data));
    }
    
    public class formatDate{
          public static SimpleDateFormat sdf = new SimpleDateFormat("EEE, dd MMM yyyy");
    }
}
